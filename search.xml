<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[初级算法]]></title>
    <url>%2F2017%2F09%2F02%2F%E5%88%9D%E7%BA%A7%E7%AE%97%E6%B3%95%2F</url>
    <content type="text"><![CDATA[因为是刚开始学习JS，之前对算法的学习也很少，先从最基本的算法开始写起。基本都是FCC题目上的算法。 计算一个整数的阶乘算法1function factorialize(num) { var number=1; while(num&gt;=1){ number*=num; num--; } return number; } factorialize(10); //3628800 factorialize(20) // 2432902008176640000 factorialize(0) //1 递归function factorialize(num) { if (num === 0) { return 1; } else { return num * factorialize(num - 1); } } factorialize(10); //3628800 factorialize(20) // 2432902008176640000 factorialize(0) //1 分割数组把一个数组arr按照指定的数组大小size分割成若干个数组块。 例如:chunk([1,2,3,4],2)=[[1,2],[3,4]]; function chunk(arr, size) { var arr2=[]; for(var i=0;i&lt;arr.length;i=i+size){ arr2.push(arr.slice(i,i+size)); } return arr2; } chunk([&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;], 2); chunk([0, 1, 2, 3, 4, 5, 6], 3) // [[0, 1, 2], [3, 4, 5], [6]] chunk([0, 1, 2, 3, 4, 5, 6, 7, 8], 4) // [[0, 1, 2, 3], [4, 5, 6, 7], [8]] 截断数组function slasher(arr, howMany) { arr.splice(0,howMany); return arr; } slasher([1, 2, 3], 2); splice() 方法通过删除现有元素和/或添加新元素来更改一个数组的内容。splice() 方法与 slice() 方法的作用是不同的，splice() 方法会直接对数组进行修改。 例如：12345var myFish = [&apos;angel&apos;, &apos;clown&apos;, &apos;mandarin&apos;, &apos;sturgeon&apos;];myFish.splice(2, 0, &apos;drum&apos;); // 在索引为2的位置插入&apos;drum&apos;// myFish 变为 [&quot;angel&quot;, &quot;clown&quot;, &quot;drum&quot;, &quot;mandarin&quot;, &quot;sturgeon&quot;]myFish.splice(2, 1); // 从索引为2的位置删除一项（也就是&apos;drum&apos;这一项）// myFish 变为 [&quot;angel&quot;, &quot;clown&quot;, &quot;mandarin&quot;, &quot;sturgeon&quot;]]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F08%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
